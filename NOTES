
# The Plan

- imitate Tomato firmware style/layout
- flask python web framework
- bootstrap with a non-standard color scheme

- modularize configuration "nuggets"; compare and apply changes all or none
- write nugget getters/setters
- use kernel/commands to fetch status info
- persist configuration changes to disk using python-augeas
- in some cases execute changes without restart?

- monitoring
    dmesg, syslog, auth
    ps aux
- front page status
    uptime
    current cpu, disk, ram utilization
    upstream: dhcp
    ip equivalent
    last login (?)
- about
    uname
    software versions
    project links
- administration
    hostname (?)
    ssh access, keys
    autocron updates
- WAN network
    static: ip, mask, gateway
    dhcp: nothing
    DNS servers
- LAN network
    dhcp: address block, lease length
- wireless
    enabled, transmit power, channel, SSID, wpa2 password
    torification
- tor
    generic status
    enable relay
    enable bridge
    common configuration

# Links

http://pypi.python.org/pypi/pystatsd/0.1.6
http://pypi.python.org/pypi/apply_firewall/1.0

